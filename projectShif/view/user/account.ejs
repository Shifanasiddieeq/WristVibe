<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/style/user/account.css">
    <link rel="stylesheet" href="/style/user/sidebar.css">
    
</head>
<body>
    <div>
        <%- include('partial/sidebar') %>
    </div>


    <div class="personal-info-container">
        <h2 class="content-head"><a href="/home"><svg xmlns="http://www.w3.org/2000/svg" height="24px"
            viewBox="0 -960 960 960" width="24px" fill="#666666">
            <path d="m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z" />
          </svg></a>Personal Info
          <span class="share-icon" onclick="shareLink()" title="Share">
            <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px" fill="#666666">
                <path d="M0 0h24v24H0V0z" fill="none" />
                <path d="M18 16.08c-.76 0-1.44.3-1.96.77l-7.13-4.07c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.12-4.07c.53.5 1.23.8 1.97.8 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7l-7.12 4.07c-.53-.5-1.23-.8-1.97-.8-1.66 0-3 1.34-3 3s1.34 3 3 3c.74 0 1.43-.3 1.96-.77l7.13 4.07c-.05.23-.09.46-.09.7 0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3z" />
            </svg>
        </span>
    </h2>
        <div class="info-group">
          <label for="name">Name:</label>
          <span id="name-display"><%= user.name%></span>
        </div>
        <div class="info-group">
          <label for="email">Email:</label>
          <span id="email-display"> <%= user.email %></span>
        </div>
        <div class="info-group">
            <label for="phone">Phone:</label>
            <span id="phone-display"> <%= user.phone %></span>
          </div>
        <div class="actions">
          <button class="edit-btn" onclick="openEditModal()">Edit Profile</button>
          <button class="change-password-btn" onclick="openPasswordModal()">Change Password</button>
        </div>
      </div>

      <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h3>Edit Profile</h3>
            <form id="edit-form" method="POST" action="/update-profile"  onsubmit="return validateForm()">
                <div class="form-group">
                    <label for="edit-name">Name:</label>
                    <input type="text" id="edit-name" name="name" value="<%= user.name %>" >
                    <small id="name-error" class="error-message"></small>
                </div>
                <div class="form-group">
                    <label for="edit-email">Email:</label>
                    <input type="email" id="edit-email" name="email" value="<%= user.email %>" readonly>
                </div>
                <div class="form-group">
                    <label for="edit-phone">Phone:</label>
                    <input type="text" id="edit-phone" name="phone" value="<%= user.phone %>"  >
                    <small id="phone-error" class="error-message"></small>
                </div>
                <div class="modal-actions">
                    <button type="button" class="cancel-btn" onclick="closeEditModal()">Cancel</button>
                    <button type="submit" class="save-btn">Save</button>
                </div>
            </form>
        </div>
    </div>


   

    <div id="passwordModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closePasswordModal()">&times;</span>
            <h3>Change Password</h3>
            <form id="password-form" onsubmit="return changePassword(event)">
                <div class="form-group">
                    <label for="current-password">Current Password:</label>
                    <input type="password" id="current-password" name="currentPassword" required>
                </div>
                <div class="form-group">
                    <label for="new-password">New Password:</label>
                    <input type="password" id="new-password" name="newPassword" required>
                </div>
                <div class="form-group">
                    <label for="confirm-password">Confirm Password:</label>
                    <input type="password" id="confirm-password" name="confirmPassword" required>
                </div>
                <div class="modal-actions">
                    <button type="button" class="cancel-btn" onclick="closePasswordModal()">Cancel</button>
                    <button type="submit" class="save-btn">Save</button>
                </div>
            </form>
            <p id="error-message" style="color: red; display: none;"></p>
            <p id="success-message" style="color: green; display: none;"></p>
        </div>
    </div>
    


    <style>
        .error-message {
            color: red; 
            font-size: 12px; 
            display: block;
            margin-top: 5px;
        }
    </style>
    <script>
        function validateForm() {
            let isValid = true;
    
            
            const nameInput = document.getElementById('edit-name');
            const nameError = document.getElementById('name-error');
            if (nameInput.value.trim().length < 4) {
                nameError.textContent = 'Name must be at least 4 characters long.';
                isValid = false;
            } else {
                nameError.textContent = '';
            }
    
          
            const phoneInput = document.getElementById('edit-phone');
            const phoneError = document.getElementById('phone-error');
            const phoneValue = phoneInput.value.trim();
            if (!/^\d{10}$/.test(phoneValue)) {
                phoneError.textContent = 'Phone number must be exactly 10 digits.';
                isValid = false;
            } else {
                phoneError.textContent = '';
            }
    
            return isValid; 
        }
    </script>
<script>

const editModal = document.getElementById('editModal');

function openEditModal() {
    editModal.style.display = 'flex';
}

function closeEditModal() {
    editModal.style.display = 'none';
}

const passwordModal = document.getElementById('passwordModal');

function openPasswordModal() {
    passwordModal.style.display = 'flex';
}

function closePasswordModal() {
    passwordModal.style.display = 'none';
}



async function changePassword(event) {
    event.preventDefault(); 

    const currentPassword = document.getElementById('current-password').value;
    const newPassword = document.getElementById('new-password').value;
    const confirmPassword = document.getElementById('confirm-password').value;

    const errorMessage = document.getElementById('error-message');
    const successMessage = document.getElementById('success-message');

    
    errorMessage.style.display = 'none';
    successMessage.style.display = 'none';

   
    if (newPassword !== confirmPassword) {
        errorMessage.style.display = 'block';
        errorMessage.textContent = 'New Password and Confirm Password do not match.';
        return;
    }

  
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
    if (!passwordRegex.test(newPassword)) {
        errorMessage.style.display = 'block';
        errorMessage.textContent = 'Password must include at least 8 characters, one uppercase letter, one lowercase letter, one number, and one special character.';
        return;
    }

    try {
      
        console.log('h');
        
        const response = await axios.post('/profile-password', {
            currentPassword,
            newPassword
        });
        
       
        if (response.status === 200) {
            successMessage.style.display = 'block';
            successMessage.textContent = 'Password changed successfully!';
            setTimeout(() => {
                closePasswordModal();
            }, 2000); 
        }
    } catch (error) {
     
        if (error.response && error.response.data) {
            
            errorMessage.style.display = 'block';
            errorMessage.textContent = error.response.data || 'An error occurred.';
        } else {
            errorMessage.style.display = 'block';
            errorMessage.textContent = 'An unexpected error occurred.';
        }
    }
}


</script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


      <style>
        .personal-info-container {
  margin-left: 420px; 
  margin-top: 80px;
  padding: 20px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  max-width: 600px;
}

.personal-info-container h2 {
  font-size: 1.8rem;
  color: #333;
  margin-bottom: 20px;
  border-bottom: 2px solid #ddd;
  padding-bottom: 10px;
}

.info-group {
  display: flex;
  justify-content: space-between;
  margin-bottom: 15px;
  font-size: 1.1rem;
}

.info-group label {
  font-weight: bold;
  color: #555;
}

.info-group span {
  color: #777;
}

.actions {
  margin-top: 20px;
  display: flex;
  gap: 15px;
}

.edit-btn,
.change-password-btn {
  background-color: #ff4a4a;
  color: white;
  padding: 10px 20px;
  font-size: 1rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.edit-btn:hover,
.change-password-btn:hover {
  background-color: #e43e3e;
}

/* Modal container */
/* Modal Overlay */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

/* Modal Content */
.modal-content {
    background: #ffffff;
    border-radius: 8px;
    padding: 20px;
    width: 400px;
    max-width: 90%;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    text-align: center;
}

/* Close Button */
.close {
    font-size: 20px;
    font-weight: bold;
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
}

/* Form Styling */
.form-group {
    margin-bottom: 15px;
    text-align: left;
}

label {
    display: block;
    font-weight: bold;
    margin-bottom: 5px;
}

input[type="text"], input[type="email"] {
    width: calc(100% - 20px);
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

/* Modal Actions */
.modal-actions {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

/* Buttons */
button {
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
}

.save-btn {
    background-color: #28a745;
    color: #ffffff;
}

.save-btn:hover {
    background-color: #218838;
}

.cancel-btn {
    background-color: #dc3545;
    color: #ffffff;
}

.cancel-btn:hover {
    background-color: #c82333;
}

input[type="password"] {
    width: calc(100% - 20px); /* Full width with padding */
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 16px;
}


      </style>
          <style>
            .share-icon {
                float: right;
                cursor: pointer;
                margin-left: 10px;
                display: inline-block;
            }
            
            
            
                </style>
                <script>
                    function shareLink() {
    const shareUrl = `${window.location.origin}/register?refferalCode=<%= user._id%>`; 
    if (navigator.share) {
        navigator.share({
            title: 'Personal Info',
            url: shareUrl,
        })
        .then(() => console.log('Successfully shared'))
        .catch((error) => console.error('Error sharing:', error));
    } else {
       
        navigator.clipboard.writeText(shareUrl)
            .then(() => alert('Link copied to clipboard!'))
            .catch((error) => console.error('Error copying link:', error));
    }
}
 </script>
    
</body>
</html>