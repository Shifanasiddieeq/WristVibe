<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Address</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .address-form-container {
            margin-top: 20px;
        }

        .error-message {
            color: red;
            font-size: 0.9em;
        }
    </style>
</head>

<body>
    <div class="container address-form-container">
        <h2 class="content-head">
            <a href="/address">
                <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px"
                    fill="#666666">
                    <path d="m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z" />
                </svg>
            </a>
            Edit Address
        </h2>
        <% console.log(address) %>
            <form id="addressForm" action="/edit-address/<%= address._id %>" method="POST">
                <div class="form-group">
                    <label for="houseNo">Flat / House no. / Building:</label>
                    <input type="text" class="form-control" id="houseNo" name="houseNo" value="<%= address.houseNo %>"
                        onkeyup="validateField('houseNo', 'House No cannot be empty!')">
                    <div class="error-message" id="houseNoError"></div>
                </div>
                <div class="form-group">
                    <label for="area">Area / Street / Village:</label>
                    <input type="text" class="form-control" id="area" name="area" value="<%= address.area %>"
                        onkeyup="validateField('area', 'Area cannot be empty!')">
                    <div class="error-message" id="areaError"></div>
                </div>
                <div class="form-group">
                    <label for="landmark">Landmark:</label>
                    <input type="text" class="form-control" id="landmark" name="landmark"
                        value="<%= address.landmark || '' %>"
                        onkeyup="validateField('landmark', 'Landmark cannot be empty!')">
                    <div class="error-message" id="landmarkError"></div>
                </div>
                <div class="form-group">
                    <label for="town">Town / City:</label>
                    <input type="text" class="form-control" id="town" name="town" value="<%= address.town %>"
                        onkeyup="validateField('town', 'Town cannot be empty!')">
                    <div class="error-message" id="townError"></div>
                </div>
                <div class="form-group">
                    <label for="pincode">Pincode:</label>
                    <input type="text" class="form-control" id="pincode" name="pincode" value="<%= address.pincode %>"
                        onkeyup="validatePincode()">
                    <div class="error-message" id="pincodeError"></div>
                </div>
                <div class="form-group">
                    <label for="state">State:</label>
                    <input type="text" class="form-control" id="state" name="state" value="<%= address.state %>"
                        onkeyup="validateField('state', 'State cannot be empty!')">
                    <div class="error-message" id="stateError"></div>
                </div>
                <button type="submit" class="btn btn-success">Save Changes</button>
                <button type="button" class="btn btn-danger" onclick="window.location.href='/address'">Cancel</button>
            </form>
    </div>



<script>
    function validateField(fieldId, errorMessage) {
        const input = document.getElementById(fieldId);
        const errorElement = document.getElementById(`${fieldId}Error`);

        if (!input.value.trim()) {
            errorElement.textContent = errorMessage;
        } else {
            const value = input.value.trim();
            // const isValid = /^[a-zA-Z0-9]{3,}$/.test(value) && !/^[0@#$%^&*]+$/.test(value);
            const isValid = /^[a-zA-Z0-9+\-\(\)\[\]]{3,}$/.test(value) && !/^[0@#$%^&*+\-\(\)\[\]]+$/.test(value);
            if (!isValid) {
                errorElement.textContent = `${errorMessage} Must be at least 3 characters, not start with 0 or special characters, and not be all zeros or symbols.`;
            } else {
                errorElement.textContent = '';
            }
        }
    }

    function validatePincode() {
        const pincodeInput = document.getElementById('pincode');
        const pincodeError = document.getElementById('pincodeError');
        const pincodeValue = pincodeInput.value.trim();

        if (!pincodeValue) {
            pincodeError.textContent = 'Pincode cannot be empty!';
            return false;
        }

        const pincodeRegex = /^[1-9][0-9]{5}$/;
        if (!pincodeRegex.test(pincodeValue)) {
            pincodeError.textContent = 'Pincode must be a 6-digit number, cannot start with 0, and cannot contain special characters!';
            return false;
        } else {
            pincodeError.textContent = '';
            return true;
        }
    }

    const addressForm = document.getElementById('addressForm');
    addressForm.addEventListener('submit', function (event) {
        let isValid = true;

        const fields = [
            { id: 'houseNo', message: 'House No cannot be empty!' },
            { id: 'area', message: 'Area cannot be empty!' },
            { id: 'landmark', message: 'Landmark cannot be empty!' },
            { id: 'town', message: 'Town cannot be empty!' },
            { id: 'state', message: 'State cannot be empty!' }
        ];

   
        fields.forEach(field => {
            validateField(field.id, field.message);
            const errorElement = document.getElementById(`${field.id}Error`);
            if (errorElement.textContent) {
                isValid = false;
            }
        });

        if (!validatePincode()) {
            isValid = false;
        }

     
        if (!isValid) {
            event.preventDefault();
        }
    });
</script>






</body>

</html>