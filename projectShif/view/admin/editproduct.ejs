<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
    <link rel="stylesheet" href="/style/admin/editproduct.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
</head>
<body>
    <main>
        <div class="page-content">
            <h1 class="content-head">
                <a href="/admin/products">
                    <svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#666666">
                        <path d="m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z" />
                    </svg>
                </a>
                Edit Product
            </h1>

            <div class="form-container">
                <form id="editProductForm" action="/admin/editproduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
             
                     <div class="image-upload-container images">
                        <% for (let i = 0; i < 3; i++) { %>
                        <div class="form-group image-controller">
                           
                            <img id="productImage<%= i + 1 %>" 
                                src="<%= product.images[i] || 'https://via.placeholder.com/100' %>" 
                                alt="Product Image <%= i + 1 %>" width="100">   
                    
                           
                            <input type="file" 
                                name="images" 
                                id="imageUpload<%= i + 1 %>" 
                                style="display: none;" 
                                accept="image/*" 
                                onchange="previewImage(event, '<%= i + 1 %>')">
                    
                            <!-- Button to trigger file input -->
                             <div class="upload-photo" onclick="document.getElementById('imageUpload<%= i + 1 %>').click();">
                                Upload Photo <%= i + 1 %>
                            </div>
                        </div>
                        <% } %>
                    </div>
                    <span id="imageError" style="color: red;"></span>
                    <br><br> 
                    


                    <div class="input-field-container">
                        <div class="form-group">
                            <input type="text" placeholder="Product Name" name="productName" id="productName"
                                value="<%= product.productName %>" required>
                            <input type="text" placeholder="Brand" name="brand" id="brand"
                                value="<%= product.brand %>" required>
                        </div><br>
                        <div class="errore">
                            <div class="innerdiv"><span id="priceErrore" style="color: red;"></span></div>
                          </div>
                        <div class="form-group">
                            <input type="number" placeholder="Price" name="price" id="price"
                                value="<%= product.price %>" required>
                            <input type="text" placeholder="Color" name="color" id="color"
                                value="<%= product.color %>" required>
                        </div><br>

                        <div class="errore1">
                            <div class="innerdiv"><span id="stockErrore" style="color: red;"></span></div>
                          
                          </div>
                        
                        <div class="form-group">
                            <input type="number" placeholder="Stock Count" name="stockCount" id="stockCount"
                                value="<%= product.stockCount %>" required>
                            <select id="category" name="category" required>
                                <option value="">Select Category</option>
                                <option value="Mens Collection" <%= product.category === 'Mens Collection' ? 'selected' : '' %>>Mens Collection</option>
                                <option value="Womens Collection" <%= product.category === 'Womens Collection' ? 'selected' : '' %>>Womens Collection</option>
                                <option value="Smart Watches" <%= product.category === 'Smart Watches' ? 'selected' : '' %>>Smart Watches</option>
                            </select>
                        </div><br>
                        <div class="form-group">
                            <textarea name="description" placeholder="Description" id="description" required><%= product.description %></textarea>
                        </div>
                    </div><br>

                    <button class="add-btn" id="submit-btn" type="submit">Save Changes</button>
                </form>
            </div>
        </div>
        

        <!-- Crop Modal -->
        <div id="cropModal" style="display: none;">
            <div class="crop-container">
                <img id="cropImage" src="">
                <div class="crop-actions">
                    <button onclick="cropImage()">Crop</button>
                    <button onclick="closeCropModal()">Cancel</button>
                </div>
            </div>
        </div>
    </main>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
    <script>
        let cropper;
        let currentImageNumber;
        let imageBlobs = {};

        function showCropper(event, imageNumber) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const cropImage = document.getElementById('cropImage');
                    cropImage.src = e.target.result;

                    currentImageNumber = imageNumber;

                    document.getElementById('cropModal').style.display = 'flex';

                    if (cropper) cropper.destroy();

                    cropper = new Cropper(cropImage, { aspectRatio: 1, viewMode: 1 });
                };
                reader.readAsDataURL(file);
            }
        }

        function cropImage() {
            const croppedCanvas = cropper.getCroppedCanvas();
            croppedCanvas.toBlob(function (blob) {
                if (blob) {
                    imageBlobs[currentImageNumber] = blob;
                }

                const croppedImage = document.getElementById('productImage' + currentImageNumber);
                croppedImage.src = croppedCanvas.toDataURL();
                closeCropModal();
            });
        }

        function closeCropModal() {
            document.getElementById('cropModal').style.display = 'none';
            if (cropper) cropper.destroy();
        }


        function previewImage(event, imageIndex) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const previewImage = document.getElementById(`productImage${imageIndex}`);
            previewImage.src = e.target.result; // Set the image source to the selected file
        };
        reader.readAsDataURL(file);
    }
}


function validatePrice(){
  const priceInput = document.getElementById('price')
  const priceError = document.getElementById('priceErrore')
  const price=parseFloat(priceInput.value)

  if (isNaN(price) || price < 0) {
            priceError.textContent = 'Price cannot be negative or empty.';
            priceInput.value = ''; // Clear invalid input
        } else {
            priceError.textContent = ''; // Clear error message
        }
    }

    function validateStock() {
        const stockInput = document.getElementById('stockCount');
        const stockError = document.getElementById('stockErrore');
        const stock = parseInt(stockInput.value, 10);

        if (isNaN(stock) || stock < 0) {
            stockError.textContent = 'Stock count cannot be negative or empty.';
            stockInput.value = ''; // Clear invalid input
        } else {
            stockError.textContent = ''; // Clear error message
        }
    }

    // Add event listeners to trigger these validations
    document.getElementById('price').addEventListener('input', validatePrice);
    document.getElementById('stockCount').addEventListener('input', validateStock);

    // Ensure validation during submission
    async function submitProduct(isEditMode, productId = null) {
        const priceInput = document.getElementById('price');
        const stockInput = document.getElementById('stockCount');

        if (priceInput.value === '' || stockInput.value === '') {
            alert('Please fix all validation errors before submitting.');
            return;
        }

        // Existing submitProduct logic here
    

}


    </script>
</body>
</html>
