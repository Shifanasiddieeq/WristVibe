<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link rel="stylesheet" href="/style/admin/addproducts.css">
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">


</head>
<body>
    <main>
        
        <div class="page-content">
            <h1 class="content-head"><a href="/admin/products"><svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px" fill="#666666"><path d="m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z"/></svg></a>Add Products</h1>
    
            <div class="form-container">
    
              
              <div class="image-upload-container">
                <div class="form-group">
                  <img id="productImage1" src="https://via.placeholder.com/100" alt="Product Image 1">
                  <input type="file" id="imageUpload1" style="display: none;" accept="image/*" onchange="showCropper(event, 1)">
                  <div class="upload-photo" onclick="document.getElementById('imageUpload1').click();">Upload Photo 1</div>
                </div>
    
                <div class="form-group">
                  <img id="productImage2" src="https://via.placeholder.com/100" alt="Product Image 2">
                  <input type="file" id="imageUpload2" style="display: none;" accept="image/*" onchange="showCropper(event, 2)">
                  <div class="upload-photo" onclick="document.getElementById('imageUpload2').click();">Upload Photo 2</div>
                </div>
    
                <div class="form-group">
                  <img id="productImage3" src="https://via.placeholder.com/100" alt="Product Image 3">
                  <input type="file" id="imageUpload3" style="display: none;" accept="image/*" onchange="showCropper(event, 3)">
                  <div class="upload-photo" onclick="document.getElementById('imageUpload3').click();">Upload Photo 3</div>
                </div>
              </div>
              <span id="imageError" style="color: red;"></span>
              <br><br>
    
             
              
              <div class="input-field-container">
                <div class="errore">
                  <div class="innerdiv"><span id="nameErrore"></span></div>
                  <div class="innerdiv"><span id="brandErrore"></span></div>
                </div>
                <div class="form-group">
                    <input type="text" placeholder="Product Name" name="productName" id="productName" onkeyup="validateName()">
                    <input type="text" placeholder="Brand" name="brand" id="brand" onkeyup="validateBrand()">
                </div>
                
                
                <div class="errore">
                  <div class="innerdiv"><span id="priceErrore" style="color: red;"></span></div>
                  <div class="innerdiv"><span id="colorErrore" style="color: red;"></span></div>
                </div>
                <div class="form-group">
                  <input type="number" placeholder="Price" name="price" id="price" oninput="validatePrice()">
                  <input type="text" placeholder="Color" name="color" id="color" onkeyup="validatecolor()">
                </div>
    
    
    
                <div class="errore1">
                  <div class="innerdiv"><span id="stockErrore"></span></div>
                  <div class="innerdiv"><span id="categoryErrore"></span></div>
                </div>
                <div class="form-group">
                  <input type="number" placeholder="Stock Count" name="quantity" id="stockCount" oninput="validateStock()">
               
                  <select id="category" name="category" required>
                    <% categories.forEach(category => { %>
                        <option value="<%= category.name %>"><%= category.name %></option>
                    <% }) %>
                </select><br><br>

                </div>
    
    
    
                  
                <div class="errore">
                  <div class="innerdiv"><span id="DescriptionErrore"></span></div>
                </div>
                <div class="form-group">
                  <textarea name="description" placeholder="Description" id="description" onkeyup="validateDescription()"></textarea>
                </div>
              </div>
    
                </div>
          </div>
        </div>
      </div>
      <button class="add-btn" id="submit-btn" onclick="submitProduct(false)">Add Now</button>
         
    
      
      <div id="cropModal">
        <div class="crop-container">
          <img id="cropImage" src="">
          <div class="crop-actions">
            <button onclick="cropImage()">Crop</button>
            <button onclick="closeCropModal()">Cancel</button>
          </div>
        </div>
      </div>

    </main>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <script>
        let cropper;
        let currentImageNumber;
        let imageBlobs = {};




function showCropper(event, imageNumber) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const cropImage = document.getElementById('cropImage');
            cropImage.src = e.target.result;

           
            currentImageNumber = imageNumber;

            document.getElementById('cropModal').style.display = 'flex';

            if (cropper) {
                cropper.destroy();
            }

            cropper = new Cropper(cropImage, { aspectRatio: 1, viewMode: 1 });
        };
        reader.readAsDataURL(file);
    }
}




function cropImage() {
    const croppedCanvas = cropper.getCroppedCanvas();
    croppedCanvas.toBlob(function (blob) {
        if (blob) {
            imageBlobs[currentImageNumber] = blob;
        } else {
            console.error('Failed to create Blob.');
        }

        const croppedImage = document.getElementById('productImage' + currentImageNumber);
        croppedImage.src = croppedCanvas.toDataURL();
        closeCropModal();
    });
}

function closeCropModal() {
    document.getElementById('cropModal').style.display = 'none';
    cropper.destroy();
}

function validatePrice(){
  const priceInput = document.getElementById('price')
  const priceError = document.getElementById('priceErrore')
  const price=parseFloat(priceInput.value)

  if (isNaN(price) || price < 0) {
            priceError.textContent = 'Price cannot be negative or empty.';
            priceInput.value = ''; // Clear invalid input
        } else {
            priceError.textContent = ''; // Clear error message
        }
    }

    function validateStock() {
        const stockInput = document.getElementById('stockCount');
        const stockError = document.getElementById('stockErrore');
        const stock = parseInt(stockInput.value, 10);

        if (isNaN(stock) || stock < 0) {
            stockError.textContent = 'Stock count cannot be negative or empty.';
            stockInput.value = ''; // Clear invalid input
        } else {
            stockError.textContent = ''; // Clear error message
        }
    }

    // Add event listeners to trigger these validations
    document.getElementById('price').addEventListener('input', validatePrice);
    document.getElementById('stockCount').addEventListener('input', validateStock);

    // Ensure validation during submission
    async function submitProduct(isEditMode, productId = null) {
        const priceInput = document.getElementById('price');
        const stockInput = document.getElementById('stockCount');

        if (priceInput.value === '' || stockInput.value === '') {
            alert('Please fix all validation errors before submitting.');
            return;
        }

        // Existing submitProduct logic here
    

}


async function submitProduct(isEditMode, productId = null) {

    const formData = new FormData();
    formData.append('productName', document.getElementById('productName').value);
    formData.append('brand', document.getElementById('brand').value);
    formData.append('price', document.getElementById('price').value);
    formData.append('color', document.getElementById('color').value);
    formData.append('stockCount', document.getElementById('stockCount').value);
    formData.append('category', document.getElementById('category').value);
    formData.append('description', document.getElementById('description').value);

   
    for (let i = 1; i <= 3; i++) {
        const blob = imageBlobs[i];
        if (blob) {
            formData.append('images', blob, `productImage${i}.png`);
        }
    }

    

    try {


        const response = await fetch('/admin/products', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        if (response.ok && data.success) {
            window.location.href = '/admin/products';
        } else {
            alert(data.message || 'Failed to submit product.');
        }
    } catch (error) {
        console.error('Error found from fetch:', error);
        alert('Failed to submit product.');
    }
}
    </script>
</body>
</html>
  